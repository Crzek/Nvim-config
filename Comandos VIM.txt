Comandos Basicos Para NeoVim
https://stsewd.dev/es/posts/neovim-installation-configuration/

Para instalar los plugins de Vim hay que crear la carpeta Nvim 
luego hay que crear un archivo 'init.vim'
una ves se tenga escrito los set y los plug
hay que ir al cmd ha intalar vim plug ----> para hacer Plugginstall
https://github.com/junegunn/vim-plug


------------------------
- instalacion en KAli  -
------------------------
sudo apt install neovim


Los archivos para la configuracion se guardan en la raiz siguiente en nvim
Este archivo se localiza en ~/.config/nvim/init.vim, si no existe, créalo.
cd ~/.config/
mkdir nvim
touch nvim/init.vim

VIM
/home/suprem/.local/share/



EN Windonws
C:\Users\ERICK\AppData\Local\nvim:

Basico 

---Moverse por vim

h,j,k,l, (w,e,b)

w   ->inicio primera palabra, NEXT
e   ->final de la palabra NEXT
b   -> inicio de la anterior palabra, BACK

~   --> te pone de mayus a minus o viceversa
.   --> repite el comando anterior
/(palabra o caracter a buscar)  -->next (n), back (shith +n)
%   ---> moverse de un parentesis a otro

gg    -> ir al principio del doc
G     -> ir al final del doc
o     -> insertar nueva linea abajo
O     -> inserta nueva linea arriba

H    -> arriab hasta la pantalla
L    -> abajo hata pantalla
M   --> al madio de la pantalla

------Movimiento horizontal
f + (caracter) -->te lleba al carrecter que conside, NEXT (;) BACK (,)
t + (Caracter) -->te lleba al caracter que conincide, pero anterior

----Modo visual, modoficar varias lineas
1r. C + v --> modo visual bloque
2n. seleccionas lineas
3r. Shift + i
4t. Modicas
5t. Ecs



---Modo remplazar
r 
shift + r

----Insertar texto
i,I    inserta al principio
a,A     inserta al final

----Copiar & pegar (modo visual)
y    ->copia
p    ->pegar despues de cursor
P    -> pegar antes del cursor

----Modo Normal -- Copiar
yy   -> copiar toda la linia
yiw  -> copiar una palabra


-----borrar texto
d   ->cortar (visual)
D   ->cortar desde el curssor hasta el final de la linea
dd  ->cortar toda la linea
x   ->corta lo que marca el cursor
X   -> corta lo que hay antes del cursor
diw -> Modo Normal, corta la palabra
dw  -> elimina palabra

daw  para eliminar una palabra (más espacios en blanco al final )
diw  para borrar una palabra interior _ _
das  para borrar una oración ( borrar disoración interna)
da"  para eliminar algo entre comillas dobles, incluidas las comillas
di"  para eliminar algo dentro de comillas dobles
dap  para borrar un párrafo
dab   da(o da)  para eliminar un bloque rodeado de(
daB   da{o da}  para eliminar un bloque rodeado de{
dat  para eliminar una etiqueta HTML
dit  para eliminar el contenido de una etiqueta HTML

-----Borrar + Insrtar
c
C
cw  -> borra desde el cursor hasta el fin de la palabra + se pone un modo Insertar
ciw -> borra la palabra (no importa donde este el cursor)+ se pone en modo Insertar
s,S

-----deshacr y Rehacer
u
control + r

----guardar archivos
:w

----abrir archivos
:e <ruta>

----Autocompletar
Control + P
control + n

-----Sustituir, atraves de linia de Comandos
:s/old word/new word       ---->solo sustituye la 1r ocurrencia
:s/old word/new word/g     ----> (g)todas la ocurriencias de la linia
:%s/old word/new word/gc     ---->(%) todas la ocurriencias del doc +(c) me prguntara que hace con cada 1

----Dividir pantalla
:sp  ---> dividir misma pantalla

-----Navegar 
gd  -->ir a la definicion de la funcio, tiene que estar en el cursor
df   --> ir al archivo donde se encuentra
Control + o   --> NEXT
Control + i   -->back 

---help, para mas ayuda 
:help (comando)

Comandos de plegado de Vim --fold
---------------------------------
zf#j crea un pliegue desde el cursor hacia abajo # líneas.
zf/ string crea un pliegue desde el cursor hasta string .
zj mueve el cursor al siguiente pliegue.
zk mueve el cursor al pliegue anterior.
za alternar un pliegue en el cursor.
zo abre un pliegue en el cursor.
zO abre todos los pliegues en el cursor.
zc cierra un pliegue debajo del cursor.
zm aumenta el foldlevel en uno.
zM cierra todos los pliegues abiertos.
zr disminuye el foldlevel en uno.
zR reduce el nivel de pliegue a cero; todos los pliegues estarán abiertos.
zd elimina el pliegue en el cursor.
zE elimina todos los pliegues.
[z mover al inicio del pliegue abierto.
]z mover hasta el final del pliegue abierto.


------aoutoPair
<M-e>, se refiere a --- alt +e ----->pone en parenteis todo la palabra, pero antes poner "()"

input: (|){["foo"]} (press <M-}> at |)
output: ({["foo"]}|)

input: |[foo, bar()] (press (<M-]> at |)
output: ([foo, bar()]|)

System Shortcuts:
    <CR>  : Insert new indented line after return if cursor in blank brackets or quotes.
    <BS>  : Delete brackets in pair
    <M-p> : Toggle Autopairs (g:AutoPairsShortcutToggle)
    <M-e> : Fast Wrap (g:AutoPairsShortcutFastWrap)
    <M-n> : Jump to next closed pair (g:AutoPairsShortcutJump)
    <M-b> : BackInsert (g:AutoPairsShortcutBackInsert)

If <M-p> <M-e> or <M-n> conflict with another keys or want to bind to another keys, add

    let g:AutoPairsShortcutToggle = '<another key>'

to .vimrc, if the key is empty string '', then the shortcut will be disabled. 
